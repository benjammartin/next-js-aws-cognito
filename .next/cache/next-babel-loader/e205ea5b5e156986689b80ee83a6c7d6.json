{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"/Users/benjamin/Desktop/perso/ventejob/modules/auth/components/confirmation/index.jsx\",\n    _s = $RefreshSig$();\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useEffect } from \"react\";\nimport { Field, Button } from \"@/commons/components\";\nimport useForm from \"@/commons/components/form/useForm\";\nimport { createUser } from \"services/auth\";\nimport Router from \"next/router\";\nimport { useRouter } from \"next/router\";\nvar stateSchema = {\n  code: {\n    value: \"\",\n    error: \"\",\n    required: true\n  },\n  email: {\n    value: \"\",\n    error: \"\",\n    required: true\n  }\n};\n\nfunction onSubmitForm(_x, _x2) {\n  return _onSubmitForm.apply(this, arguments);\n}\n\nfunction _onSubmitForm() {\n  _onSubmitForm = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(state, setMeta) {\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.prev = 0;\n            _context2.next = 3;\n            return createUser.confirm(state.email.value, state.code.value);\n\n          case 3:\n            Router.push({\n              pathname: \"/\"\n            });\n            _context2.next = 9;\n            break;\n\n          case 6:\n            _context2.prev = 6;\n            _context2.t0 = _context2[\"catch\"](0);\n            setMeta({\n              message: _context2.t0\n            });\n\n          case 9:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2, null, [[0, 6]]);\n  }));\n  return _onSubmitForm.apply(this, arguments);\n}\n\nfunction Confirmation(props) {\n  _s();\n\n  var _useForm = useForm(stateSchema, onSubmitForm),\n      state = _useForm.state,\n      handleOnChange = _useForm.handleOnChange,\n      handleOnSubmit = _useForm.handleOnSubmit,\n      disable = _useForm.disable,\n      meta = _useForm.meta,\n      setState = _useForm.setState,\n      setMeta = _useForm.setMeta;\n\n  var _useRouter = useRouter(),\n      email = _useRouter.query.email;\n\n  useEffect(function () {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      email: {\n        value: email\n      }\n    }));\n  }, [email]);\n\n  function resendCode() {\n    return _resendCode.apply(this, arguments);\n  }\n\n  function _resendCode() {\n    _resendCode = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.prev = 0;\n              _context.next = 3;\n              return createUser.resend(state.email.value);\n\n            case 3:\n              res = _context.sent;\n              setMeta({\n                message: \"Nous vous avons envoy\\xE9 un \".concat(res.CodeDeliveryDetails.DeliveryMedium, \" \\xE0 \").concat(res.CodeDeliveryDetails.Destination),\n                type: \"success\"\n              });\n              _context.next = 10;\n              break;\n\n            case 7:\n              _context.prev = 7;\n              _context.t0 = _context[\"catch\"](0);\n              setMeta({\n                message: _context.t0,\n                type: \"error\"\n              });\n\n            case 10:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[0, 7]]);\n    }));\n    return _resendCode.apply(this, arguments);\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \"Veuillez confirmer votre compte\"), __jsx(Button, {\n    type: \"button\",\n    onClick: resendCode,\n    size: \"small\",\n    kind: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"Recevoir un nouveau code\"), __jsx(\"form\", {\n    onSubmit: handleOnSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, __jsx(Field, {\n    onChange: handleOnChange,\n    label: \"Code de verification\",\n    name: \"code\",\n    type: \"text\",\n    placeholder: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    type: \"submit\",\n    size: \"large\",\n    kind: \"primary\",\n    disabled: disable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Submit\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, meta && meta.message)));\n}\n\n_s(Confirmation, \"GFiGNoWbxzTmxnHZhEFFD1Nefng=\", false, function () {\n  return [useForm, useRouter];\n});\n\n_c = Confirmation;\nexport default Confirmation;\n\nvar _c;\n\n$RefreshReg$(_c, \"Confirmation\");","map":{"version":3,"sources":["/Users/benjamin/Desktop/perso/ventejob/modules/auth/components/confirmation/index.jsx"],"names":["React","useEffect","Field","Button","useForm","createUser","Router","useRouter","stateSchema","code","value","error","required","email","onSubmitForm","state","setMeta","confirm","push","pathname","message","Confirmation","props","handleOnChange","handleOnSubmit","disable","meta","setState","query","resendCode","resend","res","CodeDeliveryDetails","DeliveryMedium","Destination","type"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Field, Button } from \"@/commons/components\";\nimport useForm from \"@/commons/components/form/useForm\";\nimport { createUser } from \"services/auth\";\nimport Router from \"next/router\";\nimport { useRouter } from \"next/router\";\n\nconst stateSchema = {\n  code: { value: \"\", error: \"\", required: true },\n  email: { value: \"\", error: \"\", required: true }\n};\n\nasync function onSubmitForm(state, setMeta) {\n  try {\n    await createUser.confirm(state.email.value, state.code.value);\n    Router.push({\n      pathname: \"/\"\n    });\n  } catch (e) {\n    setMeta({ message: e });\n  }\n}\n\nfunction Confirmation(props) {\n  const {\n    state,\n    handleOnChange,\n    handleOnSubmit,\n    disable,\n    meta,\n    setState,\n    setMeta\n  } = useForm(stateSchema, onSubmitForm);\n\n  const {\n    query: { email }\n  } = useRouter();\n\n  useEffect(() => {\n    setState({ ...state, email: { value: email } });\n  }, [email]);\n\n  async function resendCode() {\n    try {\n      let res = await createUser.resend(state.email.value);\n      setMeta({\n        message: `Nous vous avons envoyé un ${res.CodeDeliveryDetails.DeliveryMedium} à ${res.CodeDeliveryDetails.Destination}`,\n        type: \"success\"\n      });\n    } catch (e) {\n      setMeta({ message: e, type: \"error\" });\n    }\n  }\n\n  return (\n    <div>\n      <h2>Veuillez confirmer votre compte</h2>\n      <Button type=\"button\" onClick={resendCode} size=\"small\" kind=\"secondary\">\n        Recevoir un nouveau code\n      </Button>\n      <form onSubmit={handleOnSubmit}>\n        <Field\n          onChange={handleOnChange}\n          label=\"Code de verification\"\n          name=\"code\"\n          type=\"text\"\n          placeholder=\"\"\n        />\n        <Button type=\"submit\" size=\"large\" kind=\"primary\" disabled={disable}>\n          Submit\n        </Button>\n        <p>{meta && meta.message}</p>\n      </form>\n    </div>\n  );\n}\n\nexport default Confirmation;\n"]},"metadata":{},"sourceType":"module"}