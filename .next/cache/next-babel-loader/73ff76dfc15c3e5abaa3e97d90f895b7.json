{"ast":null,"code":"var _jsxFileName = \"/Users/benjamin/Desktop/perso/ventejob/modules/auth/components/confirmation/index.jsx\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useEffect } from \"react\";\nimport { Field, Button } from \"@/commons/components\";\nimport useForm from \"@/commons/components/form/useForm\";\nimport { createUser } from \"services/auth\";\nimport Router from \"next/router\";\nimport { useRouter } from \"next/router\";\nconst stateSchema = {\n  code: {\n    value: \"\",\n    error: \"\",\n    required: true\n  },\n  email: {\n    value: \"\",\n    error: \"\",\n    required: true\n  }\n};\n\nasync function onSubmitForm(state, setMeta) {\n  try {\n    await createUser.confirm(state.email.value, state.code.value);\n    Router.push({\n      pathname: \"/\"\n    });\n  } catch (e) {\n    setMeta({\n      message: e\n    });\n  }\n}\n\nfunction Confirmation(props) {\n  const {\n    state,\n    handleOnChange,\n    handleOnSubmit,\n    disable,\n    meta,\n    setState,\n    setMeta\n  } = useForm(stateSchema, onSubmitForm);\n  const {\n    query: {\n      email\n    }\n  } = useRouter();\n  useEffect(() => {\n    setState(_objectSpread(_objectSpread({}, state), {}, {\n      email: {\n        value: email\n      }\n    }));\n  }, [email]);\n\n  async function resendCode() {\n    try {\n      let res = await createUser.resend(state.email.value);\n      setMeta({\n        message: `Nous vous avons envoyé un ${res.CodeDeliveryDetails.DeliveryMedium} à ${res.CodeDeliveryDetails.Destination}`,\n        type: \"success\"\n      });\n    } catch (e) {\n      setMeta({\n        message: e,\n        type: \"error\"\n      });\n    }\n  }\n\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 5\n    }\n  }, __jsx(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }\n  }, \"Veuillez confirmer votre compte\"), __jsx(Button, {\n    type: \"button\",\n    onClick: resendCode,\n    size: \"small\",\n    kind: \"secondary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }, \"Recevoir un nouveau code\"), __jsx(\"form\", {\n    onSubmit: handleOnSubmit,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }\n  }, __jsx(Field, {\n    onChange: handleOnChange,\n    label: \"Code de verification\",\n    name: \"code\",\n    type: \"text\",\n    placeholder: \"\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }\n  }), __jsx(Button, {\n    type: \"submit\",\n    size: \"large\",\n    kind: \"primary\",\n    disabled: disable,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Submit\"), __jsx(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }\n  }, meta && meta.message)));\n}\n\nexport default Confirmation;","map":{"version":3,"sources":["/Users/benjamin/Desktop/perso/ventejob/modules/auth/components/confirmation/index.jsx"],"names":["React","useEffect","Field","Button","useForm","createUser","Router","useRouter","stateSchema","code","value","error","required","email","onSubmitForm","state","setMeta","confirm","push","pathname","e","message","Confirmation","props","handleOnChange","handleOnSubmit","disable","meta","setState","query","resendCode","res","resend","CodeDeliveryDetails","DeliveryMedium","Destination","type"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { Field, Button } from \"@/commons/components\";\nimport useForm from \"@/commons/components/form/useForm\";\nimport { createUser } from \"services/auth\";\nimport Router from \"next/router\";\nimport { useRouter } from \"next/router\";\n\nconst stateSchema = {\n  code: { value: \"\", error: \"\", required: true },\n  email: { value: \"\", error: \"\", required: true }\n};\n\nasync function onSubmitForm(state, setMeta) {\n  try {\n    await createUser.confirm(state.email.value, state.code.value);\n    Router.push({\n      pathname: \"/\"\n    });\n  } catch (e) {\n    setMeta({ message: e });\n  }\n}\n\nfunction Confirmation(props) {\n  const {\n    state,\n    handleOnChange,\n    handleOnSubmit,\n    disable,\n    meta,\n    setState,\n    setMeta\n  } = useForm(stateSchema, onSubmitForm);\n\n  const {\n    query: { email }\n  } = useRouter();\n\n  useEffect(() => {\n    setState({ ...state, email: { value: email } });\n  }, [email]);\n\n  async function resendCode() {\n    try {\n      let res = await createUser.resend(state.email.value);\n      setMeta({\n        message: `Nous vous avons envoyé un ${res.CodeDeliveryDetails.DeliveryMedium} à ${res.CodeDeliveryDetails.Destination}`,\n        type: \"success\"\n      });\n    } catch (e) {\n      setMeta({ message: e, type: \"error\" });\n    }\n  }\n\n  return (\n    <div>\n      <h2>Veuillez confirmer votre compte</h2>\n      <Button type=\"button\" onClick={resendCode} size=\"small\" kind=\"secondary\">\n        Recevoir un nouveau code\n      </Button>\n      <form onSubmit={handleOnSubmit}>\n        <Field\n          onChange={handleOnChange}\n          label=\"Code de verification\"\n          name=\"code\"\n          type=\"text\"\n          placeholder=\"\"\n        />\n        <Button type=\"submit\" size=\"large\" kind=\"primary\" disabled={disable}>\n          Submit\n        </Button>\n        <p>{meta && meta.message}</p>\n      </form>\n    </div>\n  );\n}\n\nexport default Confirmation;\n"]},"metadata":{},"sourceType":"module"}