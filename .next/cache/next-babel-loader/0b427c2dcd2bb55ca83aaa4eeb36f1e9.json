{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { CognitoUserPool, AuthenticationDetails, CognitoUser, CookieStorage } from \"amazon-cognito-identity-js\";\n\nfunction toObject(array) {\n  var values = {};\n\n  for (var i = 0; array.length > i; i++) {\n    values = _objectSpread(_objectSpread({}, values), {}, _defineProperty({}, array[i].getName(), array[i].getValue()));\n  }\n\n  return values;\n}\n\nexport var createUser = function () {\n  var userPool = new CognitoUserPool({\n    UserPoolId: process.env.NEXT_PUBLIC_COGNITO_POOL_ID,\n    ClientId: process.env.NEXT_PUBLIC_COGNITO_CLIENT_ID,\n    Storage: new CookieStorage({\n      domain: process.env.NEXT_PUBLIC_DOMAIN,\n      secure: false,\n      path: \"/\"\n    })\n  });\n  return {\n    signup: function signup(firstname, lastname, email, password) {\n      var attributeList = [];\n      var dataName = {\n        Name: \"name\",\n        Value: firstname\n      };\n      var dataFamilyName = {\n        Name: \"family_name\",\n        Value: lastname\n      };\n      var attributeName = new CognitoUserAttribute(dataName);\n      var attributeFamilyName = new CognitoUserAttribute(dataFamilyName);\n      attributeList.push(attributeName);\n      attributeList.push(attributeFamilyName);\n      return new Promise(function (resolve, reject) {\n        userPool.signUp(email, password, attributeList, null, function (err, result) {\n          if (err) {\n            reject(err);\n            return;\n          }\n\n          resolve(result.user);\n        });\n      });\n    },\n    confirm: function confirm(email, code) {\n      return null;\n    },\n    resend: function resend(email) {\n      return null;\n    },\n    signin: function signin(email, password, req) {\n      var authenticationData = {\n        Username: email,\n        Password: password\n      };\n      var authenticationDetails = new AuthenticationDetails(authenticationData);\n      var userData = {\n        Username: email,\n        Pool: userPool,\n        Storage: new CookieStorage({\n          domain: process.env.NEXT_PUBLIC_DOMAIN,\n          secure: false\n        })\n      };\n      var cognitoUser = new CognitoUser(userData);\n      return new Promise(function (resolve, reject) {\n        cognitoUser.authenticateUser(authenticationDetails, {\n          onSuccess: function onSuccess(result) {\n            resolve(result);\n          },\n          onFailure: function onFailure(err) {\n            return reject(err);\n          }\n        });\n      });\n    },\n    current: function current() {\n      return userPool.getCurrentUser();\n    },\n    hasSession: function hasSession() {\n      return new Promise(function (resolve, reject) {\n        var user = userPool.getCurrentUser();\n        if (!user) resolve(false);\n        user.getSession(function (err, session) {\n          console.log(session);\n          return err ? reject(false) : session.isValid() ? resolve(true) : reject(false);\n        });\n      });\n    },\n    logout: function logout(cb) {\n      return new Promise(function (resolve, reject) {\n        var user = userPool.getCurrentUser();\n        if (!user) reject(\"User is not defined\");\n        resolve(user.signOut());\n      });\n    }\n  };\n}();\n/**\n * user.getUserAttributes(function (err, attributes) {\n            if (err) {\n              reject(false, null)\n            } else {\n              resolve({\n                connected: true,\n                user: toObject(attributes)\n              })\n            }\n          });\n */","map":{"version":3,"sources":["/Users/benjamin/Desktop/perso/ventejob/services/auth.js"],"names":["CognitoUserPool","AuthenticationDetails","CognitoUser","CookieStorage","toObject","array","values","i","length","getName","getValue","createUser","userPool","UserPoolId","process","env","NEXT_PUBLIC_COGNITO_POOL_ID","ClientId","NEXT_PUBLIC_COGNITO_CLIENT_ID","Storage","domain","NEXT_PUBLIC_DOMAIN","secure","path","signup","firstname","lastname","email","password","attributeList","dataName","Name","Value","dataFamilyName","attributeName","CognitoUserAttribute","attributeFamilyName","push","Promise","resolve","reject","signUp","err","result","user","confirm","code","resend","signin","req","authenticationData","Username","Password","authenticationDetails","userData","Pool","cognitoUser","authenticateUser","onSuccess","onFailure","current","getCurrentUser","hasSession","getSession","session","console","log","isValid","logout","cb","signOut"],"mappings":"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","sourcesContent":["import {\n  CognitoUserPool,\n  AuthenticationDetails,\n  CognitoUser,\n  CookieStorage,\n} from \"amazon-cognito-identity-js\";\n\nfunction toObject(array) {\n  let values = {};\n  for (let i = 0; array.length > i; i++) {\n    values = {\n      ...values,\n      [array[i].getName()]: array[i].getValue(),\n    };\n  }\n  return values;\n}\n\nexport const createUser = (() => {\n  let userPool = new CognitoUserPool({\n    UserPoolId: process.env.NEXT_PUBLIC_COGNITO_POOL_ID,\n    ClientId: process.env.NEXT_PUBLIC_COGNITO_CLIENT_ID,\n    Storage: new CookieStorage({\n      domain: process.env.NEXT_PUBLIC_DOMAIN,\n      secure: false,\n      path: \"/\",\n    }),\n  });\n  return {\n    signup: (firstname, lastname, email, password) => {\n      var attributeList = [];\n      var dataName = {\n        Name: \"name\",\n        Value: firstname,\n      };\n\n      var dataFamilyName = {\n        Name: \"family_name\",\n        Value: lastname,\n      };\n      var attributeName = new CognitoUserAttribute(dataName);\n      var attributeFamilyName = new CognitoUserAttribute(dataFamilyName);\n      attributeList.push(attributeName);\n      attributeList.push(attributeFamilyName);\n      return new Promise((resolve, reject) => {\n        userPool.signUp(email, password, attributeList, null, function (\n          err,\n          result\n        ) {\n          if (err) {\n            reject(err);\n            return;\n          }\n          resolve(result.user);\n        });\n      });\n    },\n    confirm: (email, code) => {\n      return null;\n    },\n    resend: (email) => {\n      return null;\n    },\n    signin: (email, password, req) => {\n      var authenticationData = {\n        Username: email,\n        Password: password,\n      };\n      var authenticationDetails = new AuthenticationDetails(authenticationData);\n      var userData = {\n        Username: email,\n        Pool: userPool,\n        Storage: new CookieStorage({\n          domain: process.env.NEXT_PUBLIC_DOMAIN,\n          secure: false,\n        }),\n      };\n      var cognitoUser = new CognitoUser(userData);\n      return new Promise((resolve, reject) => {\n        cognitoUser.authenticateUser(authenticationDetails, {\n          onSuccess: (result) => {\n            resolve(result);\n          },\n          onFailure: (err) => reject(err),\n        });\n      });\n    },\n    current: () => {\n      return userPool.getCurrentUser();\n    },\n    hasSession: () => {\n      return new Promise((resolve, reject) => {\n        const user = userPool.getCurrentUser();\n        if (!user) resolve(false);\n        user.getSession((err, session) => {\n          console.log(session);\n          return err\n            ? reject(false)\n            : session.isValid()\n            ? resolve(true)\n            : reject(false);\n        });\n      });\n    },\n    logout: (cb) => {\n      return new Promise((resolve, reject) => {\n        const user = userPool.getCurrentUser();\n        if (!user) reject(\"User is not defined\");\n        resolve(user.signOut());\n      });\n    },\n  };\n})();\n\n/**\n * user.getUserAttributes(function (err, attributes) {\n            if (err) {\n              reject(false, null)\n            } else {\n              resolve({\n                connected: true,\n                user: toObject(attributes)\n              })\n            }\n          });\n */\n"]},"metadata":{},"sourceType":"module"}